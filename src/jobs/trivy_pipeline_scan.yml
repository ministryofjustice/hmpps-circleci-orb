---
description: >
  Scan the built docker container for CVEs using Trivy.
executor:
  name: default
  tag: "3.10"
parameters:
  fail_build:
    type: boolean
    default: true
    description: Fail the build if any CVEs are detected.
  cve_severities_to_check:
    type: string
    default: HIGH,CRITICAL
    description: What severity of CVE to look for? Options are UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL.
  additional_args:
    type: string
    default: ""
    description: Additional CLI args to pass into the trivy command
  cache_key:
    type: string
    default: v1
    description: Cache key for the vulnerability database - change to break the cache.
steps:
  - checkout
  - setup_remote_docker
  - recall_container_image
  - install_trivy
  - restore_cache:
      key: trivy_cache_<< parameters.cache_key >>
  - run:
      name: Trivy scan for << parameters.cve_severities_to_check >> CVEs
      command: |
        EXIT_CODE=0

        if [ "<< parameters.fail_build >>" == "true" ]; then
          EXIT_CODE=100
        fi

        /tmp/trivy \
          --cache-dir .trivy \
          image \
          --exit-code ${EXIT_CODE} \
          --no-progress \
          --severity << parameters.cve_severities_to_check >> \
          --ignore-unfixed \
          --skip-dirs /usr/local/lib/node_modules/npm \
          --skip-files /app/agent.jar \
          --db-repository "ghcr.io/aquasecurity/trivy-db:2","public.ecr.aws/aquasecurity/trivy-db" \
          << parameters.additional_args >> "${IMAGE_NAME}:${APP_VERSION}"
  - save_cache:
      key: trivy_cache_<< parameters.cache_key >>
      paths:
        - .trivy
