---
description: >
  Veracode SAST pipeline scan
executor:
  name: java
  tag: "17.0"
parameters:
  slack_channel:
    type: string
    default: dps_alerts_security
    description: Slack channel to use for notifications.
  docker_image_app_dir:
    description: Directory inside the docker image where the application artifacts are saved
    type: string
    default: "/app"
steps:
  - veracode_prepare_artifacts:
      docker_image_app_dir: << parameters.docker_image_app_dir >>
  - run:
      name: Download/Extract-Veracode-Pipeline-Scanner
      command: |
        wget https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip -O pipeline-scan.zip
        unzip pipeline-scan.zip -x README.md
  - restore_cache:
      keys:
        - veracode-baseline-results-{{ .Branch }}
  - run:
      name: Download Veracode Policy
      no_output_timeout: 1m
      command: |
        java -jar pipeline-scan.jar \
        --request_policy "Ministry of Justice" \
        --veracode_api_id "${VERACODE_API_ID}" \
        --veracode_api_key "${VERACODE_API_KEY}"
  - run:
      name: Scan Project
      no_output_timeout: 30m
      command: |
        java -jar pipeline-scan.jar \
          $(test -f results.json && echo "--baseline_file results.json") \
          --json_output true \
          --file source.zip \
          --policy_file Ministry_of_Justice.json \
          --veracode_api_id "${VERACODE_API_ID}" \
          --veracode_api_key "${VERACODE_API_KEY}" \
          --timeout 60 \
          --issue_details false \
          --summary_output true
  - slack_message_results:
      file: results.txt
  - save_cache:
      key: veracode-baseline-results-{{ .Branch }}
      when: always
      paths:
        - "results.json"
  - slack/notify:
      event: fail
      channel: << parameters.slack_channel >>
      custom: <<include(files/slack_failed_with_results.tpl.json)>>
