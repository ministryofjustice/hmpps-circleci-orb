---
description: >
  Veracode SAST policy scan
executor:
  name: java
  tag: <<parameters.jdk_tag>>
  java_options: <<parameters.java_options>>
parameters:
  slack_channel:
    type: string
    default: dps_alerts_security
    description: Slack channel to use for notifications.
  teams:
    default: "hmpps-tech"
    description: |
      Comma-separated list of team names associated with the specified application.
      Validates against the names of existing teams for this account.
    type: string
  docker_image_app_dir:
    description: Directory inside the docker image where the application artifacts are saved
    type: string
    default: "/app"
  jdk_tag:
    default: "17.0"
    type: string
  java_options:
    default: -Xmx1024m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process
    type: string
steps:
  - veracode_prepare_artifacts:
      docker_image_app_dir: << parameters.docker_image_app_dir >>
  - run:
      name: "Download/Extract veracode agent"
      command: |
        wget https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/22.9.10.3/vosp-api-wrappers-java-22.9.10.3.jar -O VeracodeJavaAPI.jar
  - run:
      name: Setup Veracode credentials
      command: <<include(scripts/veracode_creds.sh)>>
  - run:
      name: "Upload to Veracode"
      command: |
        java -jar VeracodeJavaAPI.jar \
        -vid "${!VERACODE_API_ID_X}" \
        -vkey "${!VERACODE_API_KEY_X}" \
        -teams "<< parameters.teams >>" \
        -action UploadAndScan \
        -appname ${CIRCLE_PROJECT_REPONAME} \
        -createprofile true \
        -deleteincompletescan 2 \
        -version "CircleCI-${CIRCLE_BUILD_NUM}" \
        -filepath source.zip \
        2>&1 | tee output.txt
  - slack_message_results:
      file: output.txt
  - slack/notify:
      event: fail
      channel: << parameters.slack_channel >>
      custom: <<include(files/slack_failed_with_results.tpl.json)>>
