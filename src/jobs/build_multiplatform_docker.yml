---
description: >
  Build docker image, also creates an app version string and pushes image to repo.
executor:
  name: default
  tag: "3.10"
parameters:
  image_name:
    type: string
    default: "quay.io/hmpps/${CIRCLE_PROJECT_REPONAME}"
    description: >
      The name of the image to build. This should be a fully qualified image name, including the registry.
      Format is [registry]/[repository]/[image_name].
      e.g. quay.io/hmpps/my-app or docker.io/hmpps/my-app or ghcr.io/hmpps/my-app
      ECR the registry contains the account id and region,
      e.g. 123456789012.dkr.ecr.eu-west-2.amazonaws.com/hmpps/my-app
  dockerfile_dir:
    type: string
    default: "."
  additional_docker_build_args:
    type: string
    default: ""
  no_output_timeout:
    type: string
    default: 30m
    description: Configure the no_output_timeout setting for the container build step
  snyk-scan:
    type: boolean
    default: false
  snyk-org:
    type: string
    default: digital-probation-services
  snyk-target-file:
    type: string
    default: Dockerfile
  snyk-fail-build:
    type: boolean
    default: true
  snyk-threshold:
    type: enum
    enum: ["low", "medium", "high"]
    default: "high"
  snyk-args:
    type: string
    default: ""
  git-lfs:
    type: boolean
    default: false
  jira_update:
    type: boolean
    default: false
    description: When true, updates any referenced Jira tickets with build status. Note that Jira integration must be enabled in your CircleCI project settings.
  pipeline_id:
    type: string
    default: ""
    description: Required if jira_update is set (otherwise the Notify Jira job will pass but do nothing), passed in as << pipeline.id >>
  pipeline_number:
    type: integer
    default: 0
    description: Required if jira_update is set, passed in as << pipeline.number >>
steps:
  - when:
      condition: << parameters.git-lfs >>
      steps:
        - install_git_lfs
  - checkout
  - setup_remote_docker:
      docker_layer_caching: true
  - create_app_version
  - run:
      name: Create IMAGE_NAME env var
      command: |
        IMAGE_NAME="<< parameters.image_name >>"
        echo "export IMAGE_NAME=$IMAGE_NAME" >> $BASH_ENV
  - mem/remember:
      env_var: IMAGE_NAME
      value: "${IMAGE_NAME}"
  - run:
      name: Setup buildx
      command: |
        docker context create multi-arch-build
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker run --rm --privileged tonistiigi/binfmt --install all
        docker buildx create --use multi-arch-build --platform linux/arm64,linux/amd64 --name="${CIRCLE_PROJECT_REPONAME}"
  - docker_login:
      image_name: "${IMAGE_NAME}"
  - run:
      name: Build and publish container image
      no_output_timeout: << parameters.no_output_timeout >>
      command: |
        docker buildx build \
          --platform linux/amd64,linux/arm64 --pull \
          --progress plain \
          --rm=false << parameters.dockerfile_dir >> \
          --build-arg BUILD_NUMBER=$APP_VERSION \
          --build-arg GIT_REF=$CIRCLE_SHA1 \
          --build-arg GIT_BRANCH=$CIRCLE_BRANCH \
          --tag "${IMAGE_NAME}:${APP_VERSION}" \
          --tag "${IMAGE_NAME}:latest" \
          --label "maintainer=dps-hmpps@digital.justice.gov.uk" \
          --label "app.version=${APP_VERSION}" \
          --label "build.version=${APP_VERSION}" \
          --label "build.number=${CIRCLE_BUILD_NUM}" \
          --label "build.url=${CIRCLE_BUILD_URL}" \
          --label "build.gitref=${CIRCLE_SHA1}" \
          --push \
          << parameters.additional_docker_build_args >>
        docker logout

  - when:
      condition: << parameters.snyk-scan >>
      steps:
        - snyk/scan:
            project: "${CIRCLE_PROJECT_REPONAME}-docker"
            organization: << parameters.snyk-org >>
            docker-image-name: "${IMAGE_NAME}:${APP_VERSION}"
            target-file: << parameters.dockerfile_dir >>/<< parameters.snyk-target-file >>
            severity-threshold: << parameters.snyk-threshold >>
            fail-on-issues: << parameters.snyk-fail-build >>
            additional-arguments: << parameters.snyk-args >>
            monitor-on-build: true

  - when:
      condition: << parameters.jira_update >>
      steps:
        - jira/notify:
            pipeline_id: << parameters.pipeline_id >>
            pipeline_number: << parameters.pipeline_number >>
